// This Pine Scriptâ„¢ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© FxCloudTrader

//@version=5
indicator(title="Flip Flop", shorttitle="Flip Flop", overlay=true, precision =4)
lookbackInput = input.int(20, "Lookback in bars", minval = 1, maxval = 4999)
display_low_of_highest_bull_bar = input(true,"display_low_of_highest_bull_bar")
display_high_of_lowest_bear_bar = input(true,"display_high_of_lowest_bear_bar")

isBullish(i) =>
    close[i] > open[i]

isBearish(i) =>
    close[i] < open[i]

candle_highs = array.new_float(lookbackInput)
candle_lows = array.new_float(lookbackInput)
candle_bull_bar_highs = array.new_float(lookbackInput)
candle_bull_bar_lows = array.new_float(lookbackInput)

var int index_highest_bull_count_from_left = na
var int index_highest_bull = na
var float value_highest_bull = na
var float value_low_of_highest_bull = na

var bool low_of_highest_bull_mode_activated = false
var bool high_of_lowest_bear_mode_activated = false

// Define the arrays to store bullish bars' highs and lows
float[] bullishBarsHighs = array.new_float(na)
float[] bullishBarsLows = array.new_float(na)
float[] bearishBarsHighs = array.new_float(na)
float[] bearishBarsLows = array.new_float(na)
float[] array_bar_highs = array.new_float(na)
float[] array_bar_lows = array.new_float(na)

// Method 3

float lowOfHighestBullishBar = na
float highOfLowestBearishhBar = na
int index_low_of_highest_bull_counted_from_left = na
int index_low_of_highest_bull_counted_from_right = na
int index_high_of_lowest_bear_counted_from_left = na
int index_low_of_lowest_bear_counted_from_right = na

if array.size(array_bar_highs) > lookbackInput
    array.shift(array_bar_highs)
    array.shift(array_bar_lows)

for index = lookbackInput - 1 to 0 by 1
    array.push(array_bar_highs, high[index])
    array.push(array_bar_lows, low[index])
    
    // ------------ find bearish scenario ------------

    // put only bullish bars in the array, use na for bearish ones
    if isBullish(index)
        array.push(bullishBarsHighs, high[index])
        array.push(bullishBarsLows, low[index])
    else
        array.push(bullishBarsHighs, na)
        array.push(bullishBarsLows, na)

    // log.info("bullishBarsHighs array:"+ str.tostring(bullishBarsHighs))

    // Find the index of the highest bullish bar
    index_low_of_highest_bull_counted_from_left := array.indexof(array_bar_highs,array.max(bullishBarsHighs))
    index_low_of_highest_bull_counted_from_right := lookbackInput - index_low_of_highest_bull_counted_from_left - 1
    
    // log.info("index " + str.tostring(index) + " array.max(bullishBarsHighs) "+ str.tostring(bullishBarsHighs)+ " index_low_of_highest_bull_counted_from_left " + str.tostring(index_low_of_highest_bull_counted_from_left))

    if index_low_of_highest_bull_counted_from_left == -1
        index_low_of_highest_bull_counted_from_left := 0
        log.error("setting index " + str.tostring(index) + " array.max(bullishBarsHighs) "+ str.tostring(bullishBarsHighs)+ " index_low_of_highest_bull_counted_from_left to " + str.tostring(index_low_of_highest_bull_counted_from_left))

    // log.info("index " + str.tostring(index))
    // log.info("array_bar_highs "+str.tostring(array_bar_highs))
    // log.info("bullishBarsHighs " + str.tostring(bullishBarsHighs))
    // log.info("array.max(bullishBarsHighs) " + str.tostring(array.max(bullishBarsHighs)))
    // log.info("index_low_of_highest_bull_counted_from_left " + str.tostring(index_low_of_highest_bull_counted_from_left))
    // log.info("index_low_of_highest_bull_counted_from_right " + str.tostring(index_low_of_highest_bull_counted_from_right))

 
    // ------------ find bullish scenario ------------


    // put only bearish bars in the array, use na for bullish ones
    if isBearish(index)
        array.push(bearishBarsHighs, high[index])
        array.push(bearishBarsLows, low[index])
    else
        array.push(bearishBarsHighs, na)
        array.push(bearishBarsLows, na)

    // Find the index of the lowest bearish bar
    index_high_of_lowest_bear_counted_from_left := array.indexof(array_bar_lows,array.min(bearishBarsLows))
    index_low_of_lowest_bear_counted_from_right := lookbackInput - index_high_of_lowest_bear_counted_from_left - 1
    
    if index_high_of_lowest_bear_counted_from_left == -1
        index_high_of_lowest_bear_counted_from_left := 0
        // log.error("setting index " + str.tostring(index) + " array.max(bullishBarsHighs) "+ str.tostring(bullishBarsHighs)+ " index_low_of_highest_bull_counted_from_left to " + str.tostring(index_low_of_highest_bull_counted_from_left))

if bar_index >= lookbackInput
    // log.info("index from left:" + str.tostring(index_low_of_highest_bull_counted_from_left) + " bullishBarsLows "+ str.tostring(bullishBarsLows))
    
    // ------------ find bearish scenario ------------

    // Retrieve the low of the highest bullish bar
    lowOfHighestBullishBar := array.get(bullishBarsLows, index_low_of_highest_bull_counted_from_left)

    // label.new(bar_index, na, str.tostring(bar_index) + "\nâ€¢= " + str.tostring(array.max(bullishBarsHighs), format.mintick) + "\n"+str.tostring(bar_index) + "\nðŸ ‡", yloc = yloc.belowbar, style = label.style_none, textcolor = color.yellow, size = size.normal)
    // log.info("bar_index close " + str.tostring(bar_index) + " "+str.tostring(close))
    // log.info("index_low_of_highest_bull_counted_from_right " + str.tostring(index_low_of_highest_bull_counted_from_right))
    // log.info("lowOfHighestBullishBar " + str.tostring(lowOfHighestBullishBar))

    // Plot a down arrow once a bar closes below the low of the highest bullish bar, the subsequent signals will be ignored until one bar closes above its current threshold.
    if close < lowOfHighestBullishBar and not low_of_highest_bull_mode_activated
        low_of_highest_bull_mode_activated := true
        label.new(bar_index, high[index_low_of_highest_bull_counted_from_right], yloc = yloc.abovebar, color = color.blue, size = size.tiny)
    
    if close > lowOfHighestBullishBar
        low_of_highest_bull_mode_activated := false
    

    // ------------ find bullish scenario ------------
    // Retrieve the high of the lowest bearish bar
    highOfLowestBearishhBar := array.get(bearishBarsHighs, index_high_of_lowest_bear_counted_from_left)

    // Plot an up arrow once a bar closes above the high of the lowest bearish bar, the subsequent signals will be ignored until one bar closes below its current threshold.
    if close > highOfLowestBearishhBar and not high_of_lowest_bear_mode_activated
        high_of_lowest_bear_mode_activated := true
        label.new(bar_index, low[index_high_of_lowest_bear_counted_from_left], yloc = yloc.belowbar, style = label.style_label_up, color = color.green, size = size.tiny)
    
    if close < highOfLowestBearishhBar
        high_of_lowest_bear_mode_activated := false
        
// Plot the low of the highest bullish bar
plot(display_low_of_highest_bull_bar?lowOfHighestBullishBar:na, "Low of Highest Bullish Bar", color=color.red, style = plot.style_stepline)

// Plot the high of the lowest bearish bar
plot(display_high_of_lowest_bear_bar?highOfLowestBearishhBar:na, "High of Lowest Bearish Bar", color=color.green, style = plot.style_stepline)

// End of Method 3



